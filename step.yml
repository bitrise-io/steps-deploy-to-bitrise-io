title: "Deploy to Bitrise.io - Apps, Logs, Artifacts"
summary: |-
  Generic artifacts deployer, attaches the artifacts to bitrise.io builds.
description: |-
  This generic artifacts deployer attaches the artifacts to bitrise.io builds.

  You'll see the deployed files in the `Apps and Artifacts` section of the build's page on bitrise.io.
website: https://github.com/bitrise-io/steps-deploy-to-bitrise-io
source_code_url: https://github.com/bitrise-io/steps-deploy-to-bitrise-io
support_url: https://github.com/bitrise-io/steps-deploy-to-bitrise-io/issues
host_os_tags:
  - "osx-10.10"
project_type_tags: []
type_tags:
  - deploy
is_requires_admin_user: false
is_always_run: true
is_skippable: false
run_if: .IsCI
toolkit:
  go:
    package_name: github.com/bitrise-io/steps-deploy-to-bitrise-io
inputs:
  - deploy_path: "$BITRISE_DEPLOY_DIR"
    opts:
      title: "Deploy directory or file path"
      description: |
        Specify the directory or file path which will be deployed.
        If the specified path is a directory, then every file
        in the specified directory will be deployed, sub-directories, however,
        won't be uploaded. To upload the directory's content
        recursively, you should use the *Compress* option
        which will compress the whole directory, with
        every sub-directory included.

        If you specify a file path, then only the specified
        file will be deployed.
      is_required: true
  - notify_user_groups: "everyone"
    opts:
      title: "Notify: User Roles"
      description: |
        Your App's user roles you want to notify. Separate the role names with commas.
        Possible role names:

        * none
        * testers
        * developers
        * admins
        * owner
        * everyone

        An example to notify your developers and testers:

        `testers, developers`

        If you want to notify everyone in the app's team, just specify `everyone`.

        If you don't want to notify anyone, set this to `none`.
  - notify_email_list:
    opts:
      title: "Notify: Emails"
      description: |
        Email addresses to notify. Separate them with commas.

        You can specify any email address, the recipients
        don't have to be in your team.
      is_sensitive: true
  - is_enable_public_page: "true"
    opts:
      title: "Enable public page for the App?"
      description: |
        If this option is enabled, a public install page
        will be available with a long and random URL which can be shared
        with others who are not registered on Bitrise.

        **If you disable this option, the `Notify Emails` option will
        be ignored and the `Notify User Roles` users will receive the build's
        URL instead of the public page's URL!**
      is_required: true
      is_expand: false
      value_options:
      - "true"
      - "false"
  - is_compress: "false"
    opts:
      title: Compress the artifacts into one file?
      summary: |-
        If this option is allowed, the artifacts
        found in the *Deploy directory* folder will be compressed
        into a single (ZIP) file.
      description: |-
        If this option is allowed, the artifacts
        found in the *Deploy directory* folder will be compressed
        into a single file.

        You can specify a custom name for the ZIP using the *zip_name*
        option - otherwise we're going to use the *Deploy directory* name.

        If this option is turned off, the artifacts
        found in the *Deploy directory* folder will be deployed
        separately.
      is_required: true
      is_expand: false
      value_options:
        - "true"
        - "false"
  - public_install_page_url_map_format: "{{range $index, $element := .}}{{if $index}}|{{end}}{{$element.File}}=>{{$element.URL}}{{end}}"
    opts:
      title: Format for the BITRISE_PUBLIC_INSTALL_PAGE_URL_MAP output
      summary: You can change the format of the BITRISE_PUBLIC_INSTALL_PAGE_URL_MAP output
      description: |-
        Specify the output pattern with golang template: [https://golang.org/pkg/text/template](https://golang.org/pkg/text/template)
      is_required: true
      is_expand: false                    
  - zip_name:
    opts:
      category: Debug
      title: Name of the compressed artifact (without .zip extension)
      summary: |-
        Specify a custom name for the compressed artifact. We're going to
        use the deploy directory name if you leave it blank.
      description: |-
        Specify a custom name for the compressed artifact. We're going to
        use the *Deploy directory* name if you leave it blank.

        This option only works if you selected *true* for *is_compress*.
  - build_url: "$BITRISE_BUILD_URL"
    opts:
      category: Debug
      title: "Bitrise Build URL"
      summary: |-
        Unique build URL of this build on Bitrise.io
      description: |-
        Unique build URL of this build on Bitrise.io
      is_required: true
      is_dont_change_value: true
      is_sensitive: true
  - build_api_token: "$BITRISE_BUILD_API_TOKEN"
    opts:
      category: Debug
      title: Bitrise Build API Token
      summary: |-
        The build's API Token for the build on Bitrise.io
      description: |-
        The build's API Token for the build on Bitrise.io
      is_required: true
      is_dont_change_value: true
      is_sensitive: true
outputs:
  - BITRISE_PUBLIC_INSTALL_PAGE_URL:
    opts:
      title: Public Install Page URL
      description: |-
        Public Install Page's URL, if the
        *Enable public page for the App?* option was *enabled*.
  - BITRISE_PUBLIC_INSTALL_PAGE_URL_MAP:
    opts:
      title: Map of filenames and Public Install Page URLs
      description: |-
        Public Install Page URLs by the artifact's file path.
        Only set it if the *Enable public page for the App?* option was *enabled*.

        The format is `KEY1=>VALUE|KEY2=>VALUE`

        Examples:

        - $BITRISE_DEPLOY_DIR/ios_app.ipa=>https://ios_app/public/install/page
        - $BITRISE_DEPLOY_DIR/android_app.apk=>https://android_app/public/install/page|$BITRISE_DEPLOY_DIR/ios_app.ipa=>https://ios_app/public/install/page
